#!/usr/bin/env -S docker-compose -p kafka -f

version: "3.5"

networks:
  default:
    driver: bridge
    internal: false
    external: false

volumes:
  forwarder_apps: {}
  splunk_var: {}
  splunk_etc: {}
  kafka_logs: {}
services:

  visual:
    image: dockersamples/visualizer:latest
    restart: "no"
    networks:
      - default
    expose:
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.services.servvisual.loadbalancer.passhostheader=true
      - traefik.http.services.servvisual.loadbalancer.server.scheme=http
      - traefik.http.services.servvisual.loadbalancer.server.port=8080
      - traefik.http.routers.rtvisual.entrypoints=entvisual
      - traefik.http.routers.rtvisual.service=servvisual
      - traefik.http.routers.rtvisual.rule=PathPrefix(`/`)
      - traefik.http.routers.rtvisual.tls=false
    deploy:
      endpoint_mode: vip
      mode: global
      #replicas: 0
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.role

  gateway:
    image: traefik:v2.1
    restart: "no"
    command: |
      --api=true
      --api.debug=true
      --api.insecure=true
      --api.dashboard=true
      --metrics=false
      --metrics.datadog=true
      --metrics.datadog.address=0.0.0.0:8125
      --metrics.datadog.addServicesLabels=true
      --metrics.datadog.addEntryPointsLabels=true
      --metrics.influxdb=true
      --metrics.influxdb.address=0.0.0.0:8089
      --metrics.influxdb.database=db
      --metrics.influxdb.retentionPolicy=two_hours
      --metrics.influxdb.addEntryPointsLabels=true
      --metrics.influxdb.addServicesLabels=true
      --tracing=false
      --tracing.serviceName=traefik
      --tracing.datadog=true
      --tracing.datadog.debug=false
      --tracing.datadog.localAgentHostPort=0.0.0.0:8126
      --accesslog=true
      --accesslog.format=json
      --accesslog.filepath=/tmp/access.log
      --providers.docker=true
      --providers.docker.swarmMode=false
      --providers.docker.useBindPortIP=true
      --providers.docker.exposedByDefault=false
      --ping=true
      --ping.entrypoint=enthttp
      --log.filePath=/tmp/traefik.log
      --log.format=json
      --log.level=DEBUG
      --hostresolver=false
      --hostresolver.cnameflattening=false
      --entrypoints.enthttp=true
      --entrypoints.enthttp.address=:80
      --entrypoints.entcmak=true
      --entrypoints.entcmak.address=:9000
      --entrypoints.ent2181=true
      --entrypoints.ent2181.address=:2181
      --entrypoints.ent2888=true
      --entrypoints.ent2888.address=:2888
      --entrypoints.ent3888=true
      --entrypoints.ent3888.address=:3888
      --entrypoints.ent9092=true
      --entrypoints.ent9092.address=:9092
      --entrypoints.entvisual=true
      --entrypoints.entvisual.address=:8081
      --entrypoints.entsplunk=true
      --entrypoints.entsplunk.address=:8000
    networks:
      default:
        aliases:
          - traefik
    ports:
      -   80:80
      - 8000:8000
      - 8080:8080
      - 8081:8081
      - 2181:2181
      - 2888:2888
      - 3888:3888
      - 9092:9092
      - 9000:9000
      - 9997:9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.role

  nodes:
    image: pvtmert/confluent:latest
    #entrypoint: sh -c
    command: kafkanet
    restart: "no"
    build:
      context: ./
      dockerfile: dockerfile
      args: {}
    networks:
      default:
        aliases:
          - kafkanet
    expose:
      - 2181
      - 2888
      - 3888
      - 9092
      - 8778
    labels:
      - traefik.enable=true
      - traefik.tcp.services.serv2181.loadbalancer.server.port=2181
      - traefik.tcp.services.serv2888.loadbalancer.server.port=2888
      - traefik.tcp.services.serv3888.loadbalancer.server.port=3888
      - traefik.tcp.services.serv9092.loadbalancer.server.port=9092
      - traefik.tcp.routers.rt2181.entrypoints=ent2181
      - traefik.tcp.routers.rt2181.service=serv2181
      - traefik.tcp.routers.rt2181.rule=HostSNI(`*`)
      - traefik.tcp.routers.rt2181.tls=false
      - traefik.tcp.routers.rt2888.entrypoints=ent2888
      - traefik.tcp.routers.rt2888.service=serv2888
      - traefik.tcp.routers.rt2888.rule=HostSNI(`*`)
      - traefik.tcp.routers.rt2888.tls=false
      - traefik.tcp.routers.rt3888.entrypoints=ent3888
      - traefik.tcp.routers.rt3888.service=serv3888
      - traefik.tcp.routers.rt3888.rule=HostSNI(`*`)
      - traefik.tcp.routers.rt3888.tls=false
      - traefik.tcp.routers.rt9092.entrypoints=ent9092
      - traefik.tcp.routers.rt9092.service=serv9092
      - traefik.tcp.routers.rt9092.rule=HostSNI(`*`)
      - traefik.tcp.routers.rt9092.tls=false
    volumes:
      - kafka_logs:/home/confluent/logs:rw
      - forwarder_apps:/opt/splunkforwarder/etc/apps:rw
    depends_on:
      - splunk
    deploy:
      endpoint_mode: dnsrr
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.role
    healthcheck:
      test: timeout 10 bash -c 'cat </dev/null >/dev/tcp/0/9092'
      interval: 1m
      timeout: 10s
      retries: 3

  consumer:
    image: pvtmert/confluent:latest
    entrypoint:
      - /bin/bash
      - -c
    command:
      - >
        SERVERS="$$(dig +short kafkanet | sed 's/$$/:9092/g')";
        kafka-console-consumer --topic hellokafka
        --bootstrap-server $${SERVERS//$$'\n'/,}
    restart: "no"
    build:
      context: ./
      dockerfile: dockerfile
      args: {}
    networks:
      - default
    depends_on:
      - nodes

  producer:
    image: pvtmert/confluent:latest
    entrypoint:
      - /bin/bash
      - -c
    command:
      - >
        SERVERS="$$(dig +short kafkanet | sed 's/$$/:9092/g')";
        top -bcHid5 | kafka-console-producer --topic hellokafka
        --broker-list $${SERVERS//$$'\n'/,}
    restart: "no"
    build:
      context: ./
      dockerfile: dockerfile
      args: {}
    networks:
      - default
    depends_on:
      - consumer

  monitor:
    image: pvtmert/cmak:latest
    restart: "no"
    networks:
      - default
    expose:
      - 9000
    environment:
      ZK_HOSTS: kafkanet:2181,nodes:2181
    labels:
      - traefik.enable=true
      - traefik.http.services.servcmak.loadbalancer.passhostheader=true
      - traefik.http.services.servcmak.loadbalancer.server.scheme=http
      - traefik.http.services.servcmak.loadbalancer.server.port=9000
      - traefik.http.routers.rtcmak.entrypoints=entcmak
      - traefik.http.routers.rtcmak.service=servcmak
      - traefik.http.routers.rtcmak.rule=PathPrefix(`/`)
      - traefik.http.routers.rtcmak.tls=false
    depends_on:
      - nodes

  splunk:
    image: splunk/splunk:7.2
    restart: "no"
    networks:
      - default
    expose:
      - 8000
      - 8089
      - 9997
    volumes:
      - splunk_var:/opt/splunk/var:rw
      - splunk_etc:/opt/splunk/etc:rw
      - kafka_logs:/tmp/logs:rw
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_PASSWORD: ${PASS:-password}
    labels:
      - traefik.enable=true
      - traefik.http.services.servsplunk.loadbalancer.passhostheader=true
      - traefik.http.services.servsplunk.loadbalancer.server.scheme=http
      - traefik.http.services.servsplunk.loadbalancer.server.port=8000
      - traefik.http.routers.rtsplunk.entrypoints=entsplunk
      - traefik.http.routers.rtsplunk.service=servsplunk
      - traefik.http.routers.rtsplunk.rule=PathPrefix(`/`)
      - traefik.http.routers.rtsplunk.tls=false

  extract_splunk:
    image: centos:7
    restart: "no"
    entrypoint:
      - find
    command:
      - /tmp
      - -iname
      - "*.tgz"
      - -exec
      - tar
      - -C
      - /home/splunk/apps
      - -xvzf
      - "{}"
      - ";"
    volumes:
      - splunk_etc:/home/splunk
      - ./plugins:/tmp:ro
    depends_on:
      - splunk

  extract_forwarder:
    image: centos:7
    restart: "no"
    entrypoint:
      - find
    command:
      - /tmp
      - -iname
      - "*.tgz"
      - -exec
      - tar
      - -C
      - /home/splunk/apps
      - -xvzf
      - "{}"
      - ";"
    volumes:
      - forwarder_apps:/home/splunk/apps
      - ./plugins:/tmp:ro
    depends_on:
      - nodes

  # forwarder:
  #   image: splunk/universalforwarder:7.2
  #   networks:
  #     - default
  #   expose:
  #     - 9997
  #   environment:
  #     SPLUNK_START_ARGS: --accept-license
  #     SPLUNK_PASSWORD: ${PASS:-password}

# TOPIC="hellokafka"
# SERVERS=$(dig +short kafkanet | sed 's/$/:9092/g')
# kafka-console-consumer --topic "${TOPIC}" --bootstrap-server "${SERVERS//$'\n'/,}"
# kafka-console-producer --topic "${TOPIC}" --broker-list "${SERVERS//$'\n'/,}"
