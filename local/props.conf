[(?::){0}docker:*]
KV_MODE = json
FIELDALIAS-env = attrs.env AS env
FIELDALIAS-label = attrs.label AS label
FIELDALIAS-message = line AS message
TRANSFORMS-docker_host = docker_host

[docker:kafka:broker]
REPORT-kafka_extractions = kafka_log_level, kafka_extractions, kafka_broker_id_match1, kafka_broker_id_match2
REPORT-gc-extractions = gc_action_type, gc_timetaken_sec

[docker:kafka:zookeeper]
REPORT-kafka_extractions = kafka_log_level, kafka_extractions
REPORT-gc-extractions = gc_action_type, gc_timetaken_sec

[docker:kafka:connect]
REPORT-kafka_extractions = kafka_log_level, kafka_connect_worker_discovering, kafka_connect_worker_task_activity, kafka_connect_worker_consumer_activity, kafka_connect_source_connector, kafka_connect_sink_connector, kafka_connect_java_class, kafka_connect_work_commit_success_ms
EVAL-connector_type = case(isnotnull(connector_source), "source_connector", isnotnull(connector_sink), "sink_connector")

[docker:confluent:schema-registry]
REPORT-kafka_extractions = kafka_log_level, kafka_extractions

[docker:confluent:kafka-rest]
REPORT-kafka_extractions = kafka_log_level, kafka_extractions

[docker:confluent:ksql-server]
REPORT-kafka_extractions = kafka_log_level, kafka_extractions
